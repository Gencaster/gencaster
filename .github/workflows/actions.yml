name: ci

on:
  pull_request:
  push:
    branches: [main]

jobs:
  pre-commit:
    name: "Run pre-commit"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
          cache: "yarn"
          cache-dependency-path: |
            caster-editor/yarn.lock
            caster-front/yarn.lock
      - run: yarn install --immutable --immutable-cache --check-cache
        working-directory: caster-editor
      - run: yarn install --immutable --immutable-cache --check-cache
        working-directory: caster-front
      - uses: pre-commit/action@v2.0.3

  build-docs:
    needs: ["pre-commit"]
    name: "Build documentation"
    runs-on: ubuntu-20.04
    steps:
      - run: sudo apt-get install --yes graphviz
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          cache: "pip"
          cache-dependency-path: |
            caster-back/setup.cfg
            caster-back/requirements*.txt
            ./requirements-docs.txt
      - run: pip3 install -r requirements-docs.txt
      - run: make -C docs html
      - uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: docs
          path: |
            docs/_build/html

  run-tests:
    needs: ["pre-commit"]
    name: "Run tests"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          cache: "pip"
          cache-dependency-path: |
            caster-back/setup.cfg
            caster-back/requirements*.txt
      - run: ./caster-back/run_tests.sh
      - name: Backend Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test reporting
          path: caster-back/mypy-tests.xml,caster-back/tests.xml
          reporter: java-junit
      - uses: 5monkeys/cobertura-action@master
        with:
          path: caster-back/coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 50

  deploy-dev:
    if: success() && github.ref == 'refs/heads/main' # only deploy main
    needs: ["run-tests"]
    name: Deploy dev
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy dev environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd gencaster
            docker compose down
            git reset --hard
            git pull origin main
            make docker-deploy-dev
